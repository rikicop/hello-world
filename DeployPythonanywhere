Step by Step

Pág:   https://help.pythonanywhere.com/pages/DeployExistingDjangoProject

1. Clonar el repositorio a travez de un Bash console:
  (Lo que hago """por ahora""" para actualizar es que simplemente 
   borro el proyecto a través del panel y vuelvo a hacer git clone)

   $ git clone https://github.com/rikicop/fotalora.git

   MEJOR -->>> $ git clone https://github.com/rikicop/fotalora.git . (con el . al final(pero no sirvió))

2. *** Este Paso es Opcional ***

   Create a virtualenv and install Django and any other requirements
   (Pero primero asegurate de crear primero el archivo de requerimiento.txt)
    
    2.1 Listar los paquetes que tienes instalado:

    $ pipenv lock -r
    
    Ej: 
    django==2.2
    pytz==2021.1
    sqlparse==0.4.1
    
    2.2 Eso guardarlo en un archivo requirements.txt
    
    $ pipenv install -r ./requirements.txt  
    
    # En el caso de pythonanywhere:
    $ pip install -r requirements.txt

3. The Virtual Eviroment
   Use 3.7 en este caso:
   
   Nota: 
   Si el sistema es ***gratuito*** esta corriendo con la siguiente configuración: 
  ***Python 3.6.0****
   
   Django==2.1.15                                                                                                                                                                
   django-filter==2.2.0 

   $ mkvirtualenv --python=/usr/bin/python3.7 fotalora_project-virtualenv 
   # mkvirtualenv --python=/usr/bin/python3.8 fotalora_project-virtualenv
 
4. Install django:

   pip install django==2.2

5. En pythonany... Add New App --colocas el nombre de tu dominio www.
   y en vez de Django escoges: 
   
   * Manual Configuration
   
   * Escogi python 3.7 por que es el que escogí en el virtual env
   
5.1 Configuración en la sección Web:

   Ve a la sección de Virtualenv: <----

   * Escoge el nombre del la virtual env que tienes en consola: fotalora_project-virtualenv

5.2 Ve a la sección Code: 
   
   WSGI configuration file: /var/www/www_tecnemas_com_wsgi.py <---- **Hacer click**
   entraras en el archivo y borraras todo el contenido, te vas a la documentacion de deploy
   y vas a copiar esto(o lo que este en la version de la documentación correspondiente):
    
        import os
	import sys
	
	# assuming your Django settings file is at '/home/myusername/mysite/mysite/settings.py'
	path = '/home/fotalora/fotalora' <---- Aquí no me pidio nombre del proyecto, sino de la carpeta que lo contiene
	if path not in sys.path:
	    sys.path.insert(0, path)
	
	os.environ['DJANGO_SETTINGS_MODULE'] = 'fotalora_project.settings' <------
	
	## Uncomment the lines below depending on your Django version
	###### then, for Django >=1.5:
	from django.core.wsgi import get_wsgi_application
	application = get_wsgi_application()
	###### or, for older Django <=1.4
	#import django.core.handlers.wsgi
        #application = django.core.handlers.wsgi.WSGIHandler()

        *** Salvas y reinicias la App ***

7.  Configurar la Base de Datos:
    
    7.1 ./manage.py migrate <--- En Bash Console
    7.2 Reload la app en la sección Web
    7.3 ALLOWED_HOSTS = ['*']


8. Problemas con el css admin or archivos estáticos???:
   
   Finalmente, set up a static files mapping to get our web servers to serve out your static files for you.

    8.1  Ve a la sección Web
    8.2. Ve a la Sección de Static Files
    8.3. Introduce el mismo URL como STATIC_URL e la sección de url (típicamente, /static/)
    8.4. Enter the path from STATIC_ROOT **No es necesario mantenerlo en settings.py**
      into the path section 
      (the full path, including /home/username/respositorioname/static) **No es necesario mantenerlo en settings.py**
    Ej: /home/fotalora/fotalora(carpeta contenedora)/static
    
	    URL 	Directory 	                       Delete
	/static/ 	/home/ricardo5829/filtpag2/static 	 
	Enter URL 	Enter path 	



9. Nombre Dominio
   
   a. En este caso ve a --> https://www.namecheap.com/
   b. Ve a Domain List a la Izquierda  y busca Advance Dns
   c. Ve a la tabla de hosts records y edita la columna value 
      un campo con el valor como este:  webapp-1060220.pythonanywhere.com

10. Https Certificado ---> pythonaywhere ofrece una manera gratuita 

    
    HTTPS certificate: Auto-renewing Let's Encrypt certificate  <--- Escoges esta
    Pero tuve que habilitar --> Force HTTPS: para que funcionara, no se si fue casualidad
    pero lo tuve que hacer.


    A N E X O (Tal vez el primer punto Obsoleto)

Posibles Problemas:

1. Problemas con el nombre del proyecto
   1. Entra en "Web" y busca:
   
   WSGI configuration file:
   /var/www/ricardo5829_pythonanywhere_com_wsgi.py

   # assuming your Django settings file is at '/home/myusername/mysite/mysite/settings.py'
   
   path = '/home/ricardo5829/MultiIImages' <--- Fíjate que no colocaste el nombre del proyecto
                                                y eso es por que cresate el proyecto directo desde la 
                                                carpeta MultiIImages(django-admin startproject mysite .)
                                                como pusiste '.' no creaste dos carpetas mysite/mysite 




2.Problemas con el css en django admin

Set STATIC_ROOT in settings.py

The STATIC_ROOT variable in settings.py defines the single folder you want to collect all your static files into. Typically, 
this would be a top-level folder inside your project, eg:

STATIC_ROOT = "/home/myusername/myproject/static"
# or, eg,
STATIC_ROOT = os.path.join(BASE_DIR, "static")

4. The important thing is this needs to be the full, absolute path to your static files folder.
Run python manage.py collectstatic <-----





3. Finally, set up a static files mapping to get our web servers to serve out your static files for you.

    1.Go to the Web tab on the PythonAnywhere dashboard
    2.Go to the Static Files section
    3.Enter the same URL as STATIC_URL in the url section (typically, /static/)
    4.Enter the path from STATIC_ROOT into the path section (the full path, including /home/username/respositioname/static)
    Ej: /home/fotalora/fotalora/static

Then hit Reload and test your static file mapping by going to retrieve a known static file.

Eg, if you have a file at /home/myusername/myproject/static/css/base.css, go visit http://www.your-domain.com/static/css/base.css
